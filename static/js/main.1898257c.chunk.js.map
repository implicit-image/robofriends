{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","App.js","index.js"],"names":["Card","name","email","id","className","src","alt","CardList","robots","search","filter","robot","toLowerCase","includes","map","SearchBox","onSearchChange","type","placeholder","value","onChange","Scroll","props","style","overflowY","border","height","children","App","useState","setSearch","setRobots","useEffect","fetch","then","res","json","data","length","event","target","console","log","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6NAgBeA,EAZF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,GAC3B,OACE,sBAAKC,UAAU,sCAAf,UACE,qBAAKC,IAAG,+BAA0BF,EAA1B,YAAwCG,IAAI,gBACpD,gCACE,6BAAKL,IACL,4BAAIC,WCQGK,EAfE,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,OAAQC,EAAa,EAAbA,OAC1B,OACE,mCACGD,EACCE,QAAO,SAAAC,GAAK,OAAIA,EAAMV,KACDW,cACAC,SAASJ,EAAOG,kBACrCE,KAAI,SAAAH,GACH,OAAO,cAAC,EAAD,CAAMV,KAAMU,EAAMV,KAAMC,MAAOS,EAAMT,MAAOC,GAAIQ,EAAMR,IAASQ,EAAMR,UCStEY,EAfG,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,eAAgBP,EAAa,EAAbA,OACnC,OACE,qBAAKL,UAAU,MAAf,SACE,uBACEA,UAAU,mCACVa,KAAK,SACLC,YAAY,gBACZjB,KAAK,SACLkB,MAAOV,EACPW,SAAUJ,OCDHK,EAVA,SAACC,GACd,OACE,sBAAKC,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAArE,UACGJ,EAAMK,SADT,SCyCWC,G,MArCH,WAAO,IAAD,EAEYC,mBAAS,IAFrB,mBAETpB,EAFS,KAEDqB,EAFC,OAGYD,mBAAS,IAHrB,mBAGTrB,EAHS,KAGDuB,EAHC,KAMhBC,qBAAU,WACRC,MAAM,8CACHC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAI,OAAIN,EAAUM,QAC1B,IAOF,OAAK7B,EAAO8B,OAKR,sBAAKlC,UAAU,KAAf,UACE,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CACEY,eAbmB,SAACuB,GAC1BT,EAAUS,EAAMC,OAAOrB,OACvBsB,QAAQC,IAAIH,EAAMC,OAAOrB,QAYnBA,MAAOV,IAET,cAAC,EAAD,UACE,cAAC,EAAD,CAAUD,OAAQA,EAAQC,OAAQA,SAXjC,2CCpBXkC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.1898257c.chunk.js","sourcesContent":["import React from 'react'\nimport 'tachyons'\n\n\nconst Card = ({ name, email, id }) => {\n  return (\n    <div className='bg-light-green dib br3 pa3 ma3 grow'>\n      <img src={`https://robohash.org/${id}?200x200`} alt='user avatar'/>\n      <div>\n        <h2>{name}</h2>\n        <p>{email}</p>\n      </div>\n    </div>\n  )\n}\n\nexport default Card\n","import React from 'react'\nimport Card from './Card'\n\nconst CardList = ({ robots, search }) => {\n  return (\n    <>\n      {robots\n       .filter(robot => robot.name\n                            .toLowerCase()\n                            .includes(search.toLowerCase()))\n       .map(robot => {\n         return <Card name={robot.name} email={robot.email} id={robot.id} key={robot.id}/>\n       })\n      }\n    </>\n  )\n}\n\nexport default CardList\n","import React from 'react'\nimport 'tachyons'\n\n\n\nconst SearchBox = ({ onSearchChange, search }) => {\n  return (\n    <div className='pa2'>\n      <input\n        className='pa3 ba b--green bg-lightest-blue'\n        type='search'\n        placeholder='search robots'\n        name='search'\n        value={search}\n        onChange={onSearchChange}\n      />\n    </div>\n  )\n}\n\nexport default SearchBox\n","import React from 'react'\n\n\nconst Scroll = (props) => {\n  return (\n    <div style={{overflowY: 'scroll', border: '1px solid black', height: '700px'}}>\n      {props.children}  {/* children are the components inside  */}\n    </div>\n  )\n\n}\n\n\nexport default Scroll\n","import React, { useState, useEffect } from 'react'\nimport CardList from './components/CardList'\nimport SearchBox from './components/SearchBox'\nimport Scroll from './components/Scroll.js'\n// import robots from './robots'\nimport './styles/App.css'\n\n\n\nconst App = () => {\n\n  const [search, setSearch] = useState('')\n  const [robots, setRobots] = useState([])\n\n\n  useEffect(() => {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(res => res.json()) //  response.json() returns a promise!!!\n      .then(data => setRobots(data))\n  },[])\n\n  const handleSearchChange = (event) => {\n    setSearch(event.target.value)\n    console.log(event.target.value)\n  }\n\n  if (!robots.length) {\n    return <h1>Loading</h1>\n  }\n  else {\n    return (\n      <div className='tc'>\n        <h1 className=\"f1\">robofriends</h1>\n        <SearchBox\n          onSearchChange={handleSearchChange}\n          value={search}\n        />\n        <Scroll>\n          <CardList robots={robots} search={search}/>\n        </Scroll>\n      </div>\n    )\n  }\n}\n\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App'\n// import reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}